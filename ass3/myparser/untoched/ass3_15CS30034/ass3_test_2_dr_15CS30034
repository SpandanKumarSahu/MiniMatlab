
type_specifier : VOID
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_declaration
type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
parameter_type_list : parameter_list
direct_declarator : direct_declarator ( parameter_type_list )

declarator : pointer_opt direct_declarator
declaration_list_opt

type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer

pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
init_declarator : declarator

pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
init_declarator : declarator

declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression < shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression < shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression != relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression != relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : logical_AND_expression && inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression


primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : additive_expression - multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression == relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement

selection_statement : IF ( expression ) statement
statement : selection_statement
block_item : statement
block_item_list : block_item_list block_item
block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement

selection_statement : IF ( expression ) statement
statement : selection_statement
block_item : statement
block_item_list : block_item
block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
function_definition : declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration : function_definition
translation_unit : external_declaration



type_specifier : FLOAT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_declaration
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
parameter_type_list : parameter_list
direct_declarator : direct_declarator ( parameter_type_list )

declarator : pointer_opt direct_declarator
declaration_list_opt

type_specifier : FLOAT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression == relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression

primary_expression : identifier
postfix_expression : primary_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
jump_statement : RETURN expression_opt ;
statement : jump_statement


selection_statement : IF ( expression ) statement
statement : selection_statement
block_item : statement
block_item_list : block_item_list block_item
type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
declarator : pointer_opt direct_declarator
init_declarator : declarator
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
init_declarator : declarator
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression < shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression


primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression_list
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression_list
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression_list
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression_list
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : += 
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
primary_expression : identifier
postfix_expression : primary_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression * cast_expression
primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : additive_expression - multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression_list
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression * cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
unary_operator : -primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
unary_expression : unary_operator cast_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
jump_statement : RETURN expression_opt ;
statement : jump_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
function_definition : declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration : function_definition
translation_unit : external_declaration translation_unit



type_specifier : VOID
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_declaration
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
parameter_declaration : declaration_specifiers declarator
parameter_list : parameter_list , parameter_declaration
parameter_type_list : parameter_list
direct_declarator : direct_declarator ( parameter_type_list )

declarator : pointer_opt direct_declarator
declaration_list_opt

type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
init_declarator : declarator
init_declarator_list : init_declarator
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
init_declarator : declarator

declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression < shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression < shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression

primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
primary_expression : string_literal
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
function_definition : declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration : function_definition
translation_unit : external_declaration translation_unit


type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
identifier_list_opt
direct_declarator : direct_declarator ( identifier_list_opt )

declarator : pointer_opt direct_declarator
declaration_list_opt

type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
declarator : pointer_opt direct_declarator
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
unary_operator : -primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
unary_expression : unary_operator cast_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row_list ; initializer_row
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
unary_operator : -primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
unary_expression : unary_operator cast_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row_list ; initializer_row
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row_list ; initializer_row
initializer : { initializer_row_list }
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item

type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
declarator : pointer_opt direct_declarator
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
unary_operator : -primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
unary_expression : unary_operator cast_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row_list ; initializer_row
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
unary_operator : -primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
unary_expression : unary_operator cast_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row_list ; initializer_row
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
designation_opt
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
initializer_row : initializer_row , designation_opt initializer
initializer_row_list : initializer_row_list ; initializer_row
initializer : { initializer_row_list }
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


type_specifier : MATRIX
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression_opt : assignment_expression
direct_declarator : direct_declarator [ assignment_expression_opt ]
declarator : pointer_opt direct_declarator
init_declarator : declarator
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression * cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : additive_expression + multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression .'
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : additive_expression - multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
primary_expression : string_literal
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression_list
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
argument_expression_list : assignment_expression
argument_expression_list_opt : argument_expression_list
postfix_expression : postfix_expression (arguement expression list)
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
jump_statement : RETURN expression_opt ;
statement : jump_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
function_definition : declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration : function_definition
translation_unit : external_declaration translation_unit
Successful