type_specifier : VOID
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
identifier_list_opt
direct_declarator : direct_declarator ( identifier_list_opt )
declarator : pointer_opt direct_declarator
declaration_list_opt


type_specifier : UNSIGNED
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
declaration_specifiers_opt : declaration_specifiers
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item

type_specifier : SIGNED
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
declaration_specifiers_opt : declaration_specifiers
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
init_declarator : declarator
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item

type_specifier : BOOL
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item



type_specifier : CHAR
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
pointer : * pointer_opt
pointer_opt : pointer
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item

type_specifier : CHAR
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
pointer : * pointer_opt
pointer_opt : pointer
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : string_literal
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression

primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
constant_expression : conditional_expression

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
statement : CASE constant_expression : statement
statement : labeled_statement
block_item : statement
block_item_list : block_item

jump_statement : BREAK
statement : jump_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
constant_expression : conditional_expression

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
statement : CASE constant_expression : statement
statement : labeled_statement
block_item : statement
block_item_list : block_item_list block_item

jump_statement : BREAK
statement : jump_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
constant_expression : conditional_expression

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
statement : CASE constant_expression : statement
statement : labeled_statement
block_item : statement
block_item_list : block_item_list block_item

jump_statement : BREAK
statement : jump_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
statement : DEFAULT : statement
statement : labeled_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
selection_statement : SWITCH ( expression ) statement
statement : selection_statement
block_item : statement
block_item_list : block_item_list block_item


type_specifier : FLOAT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item

type_specifier : FLOAT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
unary_operator : -primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
unary_expression : unary_operator cast_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


type_specifier : SHORT
type_specifier : INT
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
declaration_specifiers_opt : declaration_specifiers
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


type_specifier : CHAR
declaration_specifiers_opt
declaration_specifiers : type_specifier declaration_specifiers_opt
pointer_opt
direct_declarator : identifier
declarator : pointer_opt direct_declarator
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
initializer : assignment_expression
init_declarator : declarator = initializer
init_declarator_list : init_declarator
declaration : declaration_specifiers init_declarator_list_opt
declaration : declaration_specifiers init_declarator_list_opt
block_item : declaration
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression < shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
primary_expression : (expression)
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression != relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
primary_expression : (expression)
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : logical_AND_expression && inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
unary_expression : ++ unary_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression

primary_expression : identifier
postfix_expression : primary_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
postfix_expression : postfix_expression [ expression ]
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression <= shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression

jump_statement : CONTINUE ;
statement : jump_statement


jump_statement : BREAK
statement : jump_statement
selection_statement : IF ( expression ) statement ELSE statement
statement : selection_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item_list block_item


expression_opt
expression_opt
expression_opt

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
iteration_statement: FOR ( expression_opt ; expression_opt ; expression_opt )
statement : iteration_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression == relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression % .cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : relational_expression <= shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : %= 
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement


selection_statement : IF ( expression ) statement
statement : selection_statement
selection_statement : IF ( expression ) statement ELSE statement
statement : selection_statement
block_item : statement
block_item_list : block_item_list block_item
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : additive_expression - multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression ++
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item

primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression --
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : += 
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
postfix_expression : postfix_expression --
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
statement : compound_statement
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression != relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : equality_expression != relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
primary_expression : (expression)
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_OR_expression || logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
expression : assignment_expression
iteration_statement : DO statement WHILE '(' expression ')' ';'
statement : iteration_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : additive_expression + multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression * cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression / cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : multiplicative_expression / cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : -= 
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : /= 
primary_expression : constant
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item


primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : exclusive_OR_expression ^ AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : inclusive_OR_expression '|' exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : ^= 
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : |= 
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
assignment_operator : &= 
primary_expression : identifier
postfix_expression : primary_expression
unary_expression : postfix_expression
cast_expression : unary_expression
multiplicative_expression : cast_expression
additive_expression : multiplicative_expression
shift_expression : additive_expression
relational_expression : shift_expression
equality_expression : relational_expression
AND_expression : equality_expression
exclusive_OR_expression : AND_expression
inclusive_OR_expression : exclusive_OR_expression
logical_AND_expression : inclusive_OR_expression
logical_OR_expression : logical_AND_expression
conditional_expression : logical_OR_expression
assignment_expression : conditional_expression
assignment_expression : unary_expression assignment_operator assignment_expression
expression : assignment_expression
expression_opt : expression
expression_statement : expression_opt ; 
statement : expression_statement
block_item : statement
block_item_list : block_item_list block_item

expression_opt
jump_statement : RETURN expression_opt ;
statement : jump_statement
block_item : statement
block_item_list : block_item_list block_item

block_item_list_opt : block_item_list
compound_statement : { block_item_list_opt }
function_definition : declaration_specifiers declarator declaration_list_opt compound_statement
external_declaration : function_definition
translation_unit : external_declaration

Successful